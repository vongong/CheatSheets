https://www.terraform.io/language

Datatype: 
  string
  bool
  number
  list([type])
  map

Variable precedence
  Environment Variable
    Environment Variable with prefix "TF_VAR_" will assigned values to variables
    TF_VAR_sec_vnet_id will assign value to sec_vnet_id
  Variable Defination file (.tfvars)
  Variable Defination json file (.tfvars.json)
  Command Line -var or -var-file


Providers: 
  https://registry.terraform.io/

for Loops:
  tuple:
    [for item in items : tuple_element]
    local {
      toppings = ["cheese", "lettuce", "salsa"]
    }
    [for t in local.toppings : "super ${t}"]
    #results = ["super cheese", "super lettuce", "super salsa"]
  object:
    {for key, value in map : object_key => object_value}
    local {
      prices = {
        taco = 2.99
        burrito = 9.99
        enchilada = 3.99
      }
    }
    { for k, v in local.prices : k => ceil(v) }
    results: { taco = 3, burrito = 10, enchilada = 4 }

Common Functions:
  Numeric
  String
  collections
  IP network
  Filesystem
  Type Conversion

Function Testing: 
  Console

Modules
  Versioned like Providers
  Already using - Root Module
  only way to pass data from Parent Module to Child Module is by inputs and output variables

Workspace
  Uses for Multiple Environment
  creates terraform.tfstate.d directory
  manual:
    terraform plan -state=".\dev\dev.state"
      -var-file="common.tfvars"
      -var-file=".\dev\dev.tfvars"
  run: 
    terraform workspace new dev
    terraform plan
  default workspace - can't be deleted. all projects starts with it.
  
Providers Alias
  provider "azurerm" {
    alias            = "security"
    subscription_id  = var.sec_sub_id
  }
  provider "azurerm" {
    alias            = "peering"
    subscription_id  = data.azurerm_subscription.current.subscription_id
  }
  resource "azurerm_resource_group" "sec" {
    provider = azurerm.security
  }
  module "vnet" {
    providers = {
      azurerm = azurerm.security
    }
  }